[{"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\index.js":"1","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\App.js":"2","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\reportWebVitals.js":"3","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\InfoBox.js":"4","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\Map.js":"5","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\Table.js":"6","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\util.js":"7","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\LineGraph.js":"8"},{"size":289,"mtime":1607330097774,"results":"9","hashOfConfig":"10"},{"size":4156,"mtime":1607336184607,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":801,"mtime":1607333739146,"results":"13","hashOfConfig":"10"},{"size":2481,"mtime":1607330274112,"results":"14","hashOfConfig":"10"},{"size":497,"mtime":1607330298776,"results":"15","hashOfConfig":"10"},{"size":1977,"mtime":1607333913696,"results":"16","hashOfConfig":"10"},{"size":2526,"mtime":1607336049343,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1tpw7qt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\index.js",[],["36","37"],"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\App.js",["38"],"import {\n  Card,\n  CardContent,\n  FormControl,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport InfoBox from \"./InfoBox\";\nimport LineGraph from \"./LineGraph\";\nimport Map from \"./Map\";\nimport Table from \"./Table\";\nimport { prettyPrintStat, sortData } from \"./util\";\nimport \"leaflet/dist/leaflet.css\";\nimport numeral from \"numeral\";\n//https://disease.sh/ --> To get all the info related to covid\n// BEM naming convention\n// componnet_element\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [caseType, setCaseType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then(response => response.json())\n        .then(data => {\n          const countries = data.map(country => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          let sortedData = sortData(data);\n          setMapCountries(data);\n          setTableData(sortedData);\n          setCountries(countries);\n        });\n    };\n    getCountries();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n        if (data.countryInfo) {\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n          setMapZoom(4);\n        } else {\n          setMapCenter([34.80746, -40.4796]);\n          setMapZoom(3);\n        }\n      });\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app__header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map(country => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app__stats\">\n              <InfoBox isRed active={caseType === 'cases'} onClick={e => setCaseType('cases')} title='Corona cases' cases={prettyPrintStat(countryInfo.todayCases)} Total={prettyPrintStat(countryInfo.cases)} />\n              <InfoBox active={caseType === 'recovered'} onClick={e => setCaseType('recovered')} title='Recovered' cases={prettyPrintStat(countryInfo.todayRecovered)} Total={prettyPrintStat(countryInfo.recovered)} />\n              <InfoBox isRed active={caseType === 'deaths'} onClick={e => setCaseType('deaths')} title='Deaths' cases={prettyPrintStat(countryInfo.todayDeaths)} Total={prettyPrintStat(countryInfo.deaths)} />\n        </div>\n\n        <Map\n          countries={mapCountries}\n          caseType={caseType}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by Country</h3>\n          <Table countries={tableData} />\n          <h3 className=\"app_graphTitle\">Worldwide new {caseType}</h3>\n          <LineGraph className=\"app__graph\" casesType={caseType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\reportWebVitals.js",[],"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\InfoBox.js",[],"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\Map.js",[],"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\Table.js",[],"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\util.js",[],"D:\\my workouts\\Covid-19 app\\covid-19-tracker\\src\\LineGraph.js",[],{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":16,"column":8,"nodeType":"45","messageId":"46","endLine":16,"endColumn":15},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-unused-vars","'numeral' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]